{"ast":null,"code":"var _jsxFileName = \"/Users/akerketolegen/Documents/3yrfall/\\u0434\\u0431 \\u043D\\u0430 \\u0432\\u0441\\u044F\\u043A\\u0438\\u0438\\u0306 \\u043A\\u043E\\u043F\\u0438\\u044F/db_bonus/client/src/components/ListRecords.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport EditRecord from \"./EditRecord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListRecords = () => {\n  _s();\n\n  const [records, setRecords] = useState([]); //del func\n\n  const deleteRecord = async id => {\n    try {\n      const deleteRecord = await fetch(`/records/${id}`, {\n        method: \"DELETE\"\n      });\n      setRecords(records.filter(record => record.recordID !== id));\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getRecords = async () => {\n    try {\n      const response = await fetch(\"/records\");\n      const jsonData = await response.json();\n      setRecords(jsonData);\n      sortTable();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getRecords();\n  }, []);\n\n  const sortTable = () => {\n    var table, rows, switching, i, x, y, shouldSwitch;\n    table = document.getElementById(\"myTable\");\n    switching = true;\n\n    while (switching) {\n      switching = false;\n      rows = table.rows;\n\n      for (i = 1; i < rows.length - 1; i++) {\n        shouldSwitch = false;\n        x = rows[i].getElementsByTagName(\"TD\")[0];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[0];\n\n        if (Number(x.innerHTML) > Number(y.innerHTML)) {\n          shouldSwitch = true;\n          break;\n        }\n      }\n\n      if (shouldSwitch) {\n        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"All Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      id: \"myTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Servant email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Disease Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total deaths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: records.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.recordID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.cname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record[\"disease code\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record[\"total deaths\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record[\"total patients\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditRecord, {\n              record: record\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteRecord(record.recordID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, record.recordID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ListRecords, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n\n_c = ListRecords;\nexport default ListRecords;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListRecords\");","map":{"version":3,"sources":["/Users/akerketolegen/Documents/3yrfall/дб на всякий копия/db_bonus/client/src/components/ListRecords.js"],"names":["React","Fragment","useEffect","useState","EditRecord","ListRecords","records","setRecords","deleteRecord","id","fetch","method","filter","record","recordID","error","console","log","message","getRecords","response","jsonData","json","sortTable","table","rows","switching","i","x","y","shouldSwitch","document","getElementById","length","getElementsByTagName","Number","innerHTML","parentNode","insertBefore","map","email","cname"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"\nimport EditRecord from \"./EditRecord\"\n\nconst ListRecords = () => {\n    const [records, setRecords] = useState([])\n\n    //del func\n    const deleteRecord = async (id) => {\n        try {\n            const deleteRecord = await fetch(`/records/${id}`, {\n                method: \"DELETE\"\n            })\n            setRecords(records.filter(record => record.recordID !== id))\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const getRecords = async () => {\n        try {\n            const response = await fetch(\"/records\")\n            const jsonData = await response.json()\n            setRecords(jsonData)\n            sortTable()\n        } catch (error) {\n            console.error(error.message)\n        }\n    }\n\n    useEffect(() => {\n        getRecords()\n    }, [])\n\n    const sortTable = () => {\n        var table, rows, switching, i, x, y, shouldSwitch;\n        table = document.getElementById(\"myTable\");\n        switching = true;\n        while (switching) {\n            switching = false;\n            rows = table.rows;\n            for (i = 1; i < (rows.length - 1); i++) {\n                shouldSwitch = false;\n                x = rows[i].getElementsByTagName(\"TD\")[0];\n                y = rows[i + 1].getElementsByTagName(\"TD\")[0];\n                if (Number(x.innerHTML) > Number(y.innerHTML)) {\n                    shouldSwitch = true;\n                    break;\n                }\n            }\n            if (shouldSwitch) {\n                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n                switching = true;\n            }\n        }\n    }\n\n    return <Fragment>\n        <h1 className=\"mt-5\">All Records</h1>\n        <table className=\"table table-hover\" id=\"myTable\" >\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Servant email</th>\n                    <th>Country</th>\n                    <th>Disease Code</th>\n                    <th>Total deaths</th>\n                    <th>Total patients</th>\n                    <th></th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {records.map(record => (\n                    <tr key={record.recordID}>\n                        <td>{record.recordID}</td>\n                        <td>{record.email}</td>\n                        <td>{record.cname}</td>\n                        <td>{record[\"disease code\"]}</td>\n                        <td>{record[\"total deaths\"]}</td>\n                        <td>{record[\"total patients\"]}</td>\n                        <td><EditRecord record={record} /></td>\n                        <td><button className=\"btn btn-danger\"\n                            onClick={() => deleteRecord(record.recordID)}>Delete</button></td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    </Fragment>\n}\n\nexport default ListRecords"]},"metadata":{},"sourceType":"module"}