{"ast":null,"code":"var _jsxFileName = \"/Users/akerketolegen/Documents/3yrfall/\\u0434\\u0431 \\u043D\\u0430 \\u0432\\u0441\\u044F\\u043A\\u0438\\u0438\\u0306 \\u043A\\u043E\\u043F\\u0438\\u044F/db_bonus/client/src/components/FindAverage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FindAverage = () => {\n  _s();\n\n  const [records, setRecords] = useState([]);\n  const [countryAvg, setCountryAvg] = useState([]);\n  const [specialization, setSpecialization] = useState(\"\");\n\n  const getRecords = async () => {\n    try {\n      const response = await fetch(`/descriptions`);\n      const jsonData = await response.json();\n      setRecords(jsonData);\n      setSpecialization(records[0].description);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getRecords();\n  }, []);\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        specialization\n      };\n      const response = await fetch(`/findAVG/${specialization}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const jsonData = await response.json();\n      setCountryAvg(jsonData);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const changeStuff = value => {\n    setSpecialization(value);\n    setCountryAvg([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex mt-5\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control mr-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: specialization,\n          onChange: e => changeStuff(e.target.value),\n          children: records.map(record => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: record.description\n            }, record.description, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"mt-1\",\n          children: \"Choose specialization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info ml-2\",\n        children: \"Find Average Salaries for all countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-5\",\n        children: [\"Country averages for \", specialization, \" diseases\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover\",\n        id: \"myTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Average Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: countryAvg.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.cname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.avg ? parseFloat(record.avg).toFixed(2) : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, record.cname, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n\n_s(FindAverage, \"jZQU8CxbSTh9Vcei3v2VNkw8VmM=\");\n\n_c = FindAverage;\nexport default FindAverage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindAverage\");","map":{"version":3,"sources":["/Users/akerketolegen/Documents/3yrfall/дб на всякий копия/db_bonus/client/src/components/FindAverage.js"],"names":["React","Fragment","useEffect","useState","FindAverage","records","setRecords","countryAvg","setCountryAvg","specialization","setSpecialization","getRecords","response","fetch","jsonData","json","description","error","console","message","onSubmitForm","e","preventDefault","body","method","headers","JSON","stringify","log","changeStuff","value","target","map","record","cname","avg","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"\n\nconst FindAverage = () => {\n    const [records, setRecords] = useState([])\n    const [countryAvg, setCountryAvg] = useState([])\n    const [specialization, setSpecialization] = useState(\"\")\n    const getRecords = async () => {\n        try {\n            const response = await fetch(`/descriptions`)\n            const jsonData = await response.json()\n            setRecords(jsonData)\n            setSpecialization(records[0].description)\n        } catch (error) {\n            console.error(error.message)\n        }\n    }\n    useEffect(() => {\n        getRecords()\n    }, [])\n\n    const onSubmitForm = async e => {\n        e.preventDefault()\n        try {\n            const body = { specialization }\n            const response = await fetch(`/findAVG/${specialization}`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(body)\n                })\n            const jsonData = await response.json()\n            setCountryAvg(jsonData)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const changeStuff = (value) => {\n        setSpecialization(value)\n        setCountryAvg([])\n    }\n\n    return <Fragment>\n        <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n            <div className=\"form-control mr-1\">\n                <select className=\"form-control\" value={specialization} \n                onChange={e => changeStuff(e.target.value)}>\n                    {records.map(record => {\n                        return <option key={record.description}>{record.description}</option>\n                    })}\n                </select>\n                <h6 className=\"mt-1\">Choose specialization</h6>\n            </div>\n            <button className=\"btn btn-info ml-2\">Find Average Salaries for all countries</button>\n        </form>\n        <div>\n    <h4 className=\"mt-5\">Country averages for {specialization} diseases</h4>\n    <table className=\"table table-hover\" id=\"myTable\" >\n        <thead>\n            <tr>\n                <th>Country</th>\n                <th>Average Salary</th>\n            </tr>\n        </thead>\n        <tbody>\n            {countryAvg.map(record => (\n                <tr key={record.cname}>\n                    <td>{record.cname}</td>\n                    <td>{record.avg? parseFloat(record.avg).toFixed(2) : 0}</td>\n                </tr>\n            ))}\n        </tbody>\n    </table>\n    </div>\n    </Fragment>\n}\n\nexport default FindAverage"]},"metadata":{},"sourceType":"module"}