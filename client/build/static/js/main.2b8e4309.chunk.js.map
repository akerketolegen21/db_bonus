{"version":3,"sources":["components/FindAverage.js","components/inputRecord.js","components/EditRecord.js","components/ListRecords.js","components/Menu.js","App.js","index.js"],"names":["FindAverage","useState","records","setRecords","countryAvg","setCountryAvg","specialization","setSpecialization","getRecords","a","fetch","response","json","jsonData","description","console","error","message","useEffect","onSubmitForm","e","preventDefault","body","method","headers","JSON","stringify","log","className","onSubmit","value","onChange","target","map","record","id","cname","avg","parseFloat","toFixed","InputRecord","email","setEmail","setCname","dcode","setDcode","deaths","setDeaths","patients","setPatients","servants","setServants","countries","setCountries","dcodes","setDcodes","getServants","getCountries","getDcodes","window","location","servant","country","type","EditRecord","updateDeaths","recordID","onClick","ListRecords","deleteRecord","filter","sortTable","table","rows","switching","i","x","y","shouldSwitch","document","getElementById","length","getElementsByTagName","Number","innerHTML","parentNode","insertBefore","Menu","href","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b8e4309.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\"\n\nconst FindAverage = () => {\n    const [records, setRecords] = useState([])\n    const [countryAvg, setCountryAvg] = useState([])\n    const [specialization, setSpecialization] = useState(\"\")\n    const getRecords = async () => {\n        try {\n            const response = await fetch(`/descriptions`)\n            const jsonData = await response.json()\n            setRecords(jsonData)\n            setSpecialization(records[0].description)\n        } catch (error) {\n            console.error(error.message)\n        }\n    }\n    useEffect(() => {\n        getRecords()\n    }, [])\n\n    const onSubmitForm = async e => {\n        e.preventDefault()\n        try {\n            const body = { specialization }\n            const response = await fetch(`/findAVG/${specialization}`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(body)\n                })\n            const jsonData = await response.json()\n            setCountryAvg(jsonData)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const changeStuff = (value) => {\n        setSpecialization(value)\n        setCountryAvg([])\n    }\n\n    return <Fragment>\n        <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n            <div className=\"form-control mr-1\">\n                <select className=\"form-control\" value={specialization} \n                onChange={e => changeStuff(e.target.value)}>\n                    {records.map(record => {\n                        return <option key={record.description}>{record.description}</option>\n                    })}\n                </select>\n                <h6 className=\"mt-1\">Choose specialization</h6>\n            </div>\n            <button className=\"btn btn-info ml-2\">Find Average Salaries for all countries</button>\n        </form>\n        <div>\n    <h4 className=\"mt-5\">Country averages for {specialization} diseases</h4>\n    <table className=\"table table-hover\" id=\"myTable\" >\n        <thead>\n            <tr>\n                <th>Country</th>\n                <th>Average Salary</th>\n            </tr>\n        </thead>\n        <tbody>\n            {countryAvg.map(record => (\n                <tr key={record.cname}>\n                    <td>{record.cname}</td>\n                    <td>{record.avg? parseFloat(record.avg).toFixed(2) : 0}</td>\n                </tr>\n            ))}\n        </tbody>\n    </table>\n    </div>\n    </Fragment>\n}\n\nexport default FindAverage","import React, { Fragment, useState, useEffect } from \"react\";\n\nconst InputRecord = () => {\n    // eslint-disable-next-line\n    const [email, setEmail] = useState(\"\")\n    const [cname, setCname] = useState(\"\")\n    const [dcode, setDcode] = useState(\"\")\n    const [deaths, setDeaths] = useState(0)\n    const [patients, setPatients] = useState(0)\n\n    const [servants, setServants] = useState([])\n    const [countries, setCountries] = useState([])\n    const [dcodes, setDcodes] = useState([])\n\n    const getServants = async () => {\n        try {\n            const response = await fetch(\"/servants\")\n            const jsonData = await response.json()\n            setServants(jsonData)\n        } catch (error) {\n            console.error(error.message)\n        }\n    }\n    const getCountries = async () => {\n        try {\n            const response = await fetch(\"/countries\")\n            const jsonData = await response.json()\n            setCountries(jsonData)\n        } catch (error) {\n            console.error(error.message)\n        }\n    }\n    const getDcodes = async () => {\n        try {\n            const response = await fetch(\"/dcodes\")\n            const jsonData = await response.json()\n            setDcodes(jsonData)\n        } catch (error) {\n            console.error(error.message)\n        }\n    }\n\n    const onSubmitForm = async e => {\n        e.preventDefault()\n        try {\n            const body = { email, cname, dcode, deaths, patients }\n            const response = await fetch(\"/records\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(body)\n                })\n                window.location = \"/\"\n        } catch (error) {\n            console.log(error.message)\n        } \n    }\n\n    useEffect(() => {\n        getServants()\n    }, [])\n\n    useEffect(() => {\n        getCountries()\n    }, [])\n    useEffect(() => {\n        getDcodes()\n    }, [])\n    return <Fragment>\n        <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n            <div className=\"form-control mr-1\">\n                <select className=\"form-control\" value={email} onChange={e => setEmail(e.target.value)}>\n                    {servants.map(servant => {\n                        return <option key={servant.email}>{servant.email}</option>\n                    })}\n                </select>\n                <h6 className=\"mt-1\">Choose servant email</h6>\n            </div>\n            <div className=\"form-control mr-1\">\n                <select className=\"form-control\" value={cname} onChange={e => setCname(e.target.value)}>\n                {countries.map(country => {\n                        return <option key={country.cname}>{country.cname}</option>\n                    })}\n                </select>\n                <h6 className=\"mt-1\">Choose disease country</h6>\n                <input type=\"number\" className=\"form-control\" id=\"deaths\" value={deaths} onChange={e => setDeaths(e.target.value)} />\n                <h6 className=\"mt-1\">Add total deaths</h6>\n            </div>\n            <div className=\"form-control\">\n                <select className=\"form-control\" value={dcode} onChange={e => setDcode(e.target.value)}>\n                {dcodes.map(dcode => {\n                        return <option key={dcode[\"disease code\"]}>{dcode[\"disease code\"]}</option>\n                    })}\n                </select>\n                <h6 className=\"mt-1\">Choose disease code</h6>\n                <input type=\"number\" className=\"form-control\" id=\"patients\" value={patients} onChange={e => setPatients(e.target.value)} />\n                <h6 className=\"mt-1\">Add total patients</h6>\n            </div>\n            <button className=\"btn btn-success ml-2\">Add Record</button>\n        </form>\n    </Fragment>\n}\n\nexport default InputRecord","import React, { Fragment, useState } from \"react\"\n\nconst EditRecord = ({ record }) => {\n    const [deaths, setDeaths] = useState(record[\"total deaths\"])\n\n    const updateDeaths = async e => {\n        e.preventDefault()\n        try {\n            const body = { deaths }\n            const response = await fetch(`/records/deaths/${record.recordID}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            })\n            window.location = \"/\"\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    return <Fragment>\n        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#id${record.recordID}`}>\n            Edit\n        </button>\n\n        <div className=\"modal\" id={`id${record.recordID}`} onClick={() => setDeaths(record[\"total deaths\"])}>\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n\n                    <div className=\"modal-header\">\n                        <h4 className=\"modal-title\">Edit record</h4>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => setDeaths(record[\"total deaths\"])}>&times;</button>\n                    </div>\n\n                    <div className=\"modal-body\">\n                        <h6>Edit total deaths</h6>\n                        <input type=\"number\" className=\"form-control\" value={deaths}\n                            onChange={e => setDeaths(e.target.value)}></input>\n                    </div>\n\n                    <div className=\"modal-footer\">\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-warning\"\n                            data-dismiss=\"modal\"\n                            onClick={e => updateDeaths(e)}>Edit</button>\n                        <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </Fragment>\n}\n\nexport default EditRecord","import React, { Fragment, useEffect, useState } from \"react\"\nimport EditRecord from \"./EditRecord\"\n\nconst ListRecords = () => {\n    const [records, setRecords] = useState([])\n\n    //del func\n    const deleteRecord = async (id) => {\n        try {\n            const deleteRecord = await fetch(`/records/${id}`, {\n                method: \"DELETE\"\n            })\n            setRecords(records.filter(record => record.recordID !== id))\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    const getRecords = async () => {\n        try {\n            const response = await fetch(\"/records\")\n            const jsonData = await response.json()\n            setRecords(jsonData)\n            sortTable()\n        } catch (error) {\n            console.error(error.message)\n        }\n    }\n\n    useEffect(() => {\n        getRecords()\n    }, [])\n\n    const sortTable = () => {\n        var table, rows, switching, i, x, y, shouldSwitch;\n        table = document.getElementById(\"myTable\");\n        switching = true;\n        while (switching) {\n            switching = false;\n            rows = table.rows;\n            for (i = 1; i < (rows.length - 1); i++) {\n                shouldSwitch = false;\n                x = rows[i].getElementsByTagName(\"TD\")[0];\n                y = rows[i + 1].getElementsByTagName(\"TD\")[0];\n                if (Number(x.innerHTML) > Number(y.innerHTML)) {\n                    shouldSwitch = true;\n                    break;\n                }\n            }\n            if (shouldSwitch) {\n                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n                switching = true;\n            }\n        }\n    }\n\n    return <Fragment>\n        <h1 className=\"mt-5\">All Records</h1>\n        <table className=\"table table-hover\" id=\"myTable\" >\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Servant email</th>\n                    <th>Country</th>\n                    <th>Disease Code</th>\n                    <th>Total deaths</th>\n                    <th>Total patients</th>\n                    <th></th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {records.map(record => (\n                    <tr key={record.recordID}>\n                        <td>{record.recordID}</td>\n                        <td>{record.email}</td>\n                        <td>{record.cname}</td>\n                        <td>{record[\"disease code\"]}</td>\n                        <td>{record[\"total deaths\"]}</td>\n                        <td>{record[\"total patients\"]}</td>\n                        <td><EditRecord record={record} /></td>\n                        <td><button className=\"btn btn-danger\"\n                            onClick={() => deleteRecord(record.recordID)}>Delete</button></td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    </Fragment>\n}\n\nexport default ListRecords","import React, { Fragment } from \"react\"\n\nconst Menu = () => {\n    return <Fragment>\n        <nav className=\"navbar navbar-expand-sm bg-success navbar-dark\">\n            <a className=\"navbar-brand\" href=\"#\">Main</a>\n        </nav>\n    </Fragment>\n}\n\nexport default Menu","import React, { Fragment } from 'react'\nimport './App.css';\nimport FindAverage from './components/FindAverage';\n\n//components\nimport InputRecord from './components/inputRecord'\nimport ListRecords from './components/ListRecords'\nimport Menu from './components/Menu';\n\nfunction App() {\n  return (<Fragment>\n    <Menu />\n    <Fragment>\n      <h1 className=\"text-center mt-5\">Health Center</h1>\n    </Fragment>\n    <div className=\"container\">\n      <InputRecord />\n      <FindAverage />\n      <ListRecords />\n    </div></Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// eslint-disable-next-line\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}